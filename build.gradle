plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.madarasz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext['junit-jupiter.version'] = '5.6.0'
apply plugin: 'jacoco'
jacoco {
  toolVersion = "0.8.5"
}
jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled true
  }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.code.gson:gson:2.8.6'
	compileOnly("org.springframework.boot:spring-boot-devtools")
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

jacocoTestCoverageVerification {
  violationRules {

//      rule {
//          element = 'METHOD'
//          limit {
//              counter = 'LINE'
//              value = 'COVEREDRATIO'
//              minimum = 1.0
//          }
//          excludes = [
//                  'io.reflectoring.coverage.part.PartlyCovered.partlyCovered(java.lang.String, boolean)',
//          ]
//      }

    rule {
      element = 'CLASS'
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 1.0
      }
      excludes = [
          'io.reflectoring.coverage.part.PartlyCovered',
          'io.reflectoring.coverage.ignored.*',
          'io.reflectoring.coverage.part.NotCovered'
      ]
    }
    rule {
      element = 'CLASS'
      includes = [
          'io.reflectoring.coverage.part.PartlyCovered'
      ]
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.8
      }
    }
  }

}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
	useJUnitPlatform()
  if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }
}
